{"version":3,"sources":["services/evaluations.js","services/reducer.js","components/EvalTable.js","components/Dashboard.js","components/UserInfo.js","components/StackedBar.js","components/StatTable.js","App.js","index.js"],"names":["baseUrl","getEvaluations","a","page","axios","get","response","data","getStats","getUsers","getUserData","id","initialState","users","evaluations","currentPage","stats","changePageTo","dispatch","type","reducer","state","action","dateDifference","first","second","diff","Date","Math","round","EvalTable","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","style","backgroundColor","evalGoodness","begin_at","toLocaleString","to","corrector","login","filled_at","final_mark","Dashboard","useDispatch","total","Button","variant","color","onClick","last_page","UserInfo","useState","userData","setUserData","fetchUserData","useParams","useEffect","Object","keys","length","Typography","averageGoodness","toFixed","component","Link","StackedBar","sum","reduce","key","parseFloat","graphData","name","amount","percentage","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stackId","fill","StatTable","shortEvaluations","shortFeedbackEvaluations","lowRatingEvaluations","goodnessDistribution","App","useSelector","AppBar","position","path","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c285514f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/evaluations'\n\nexport const getEvaluations = async (page= 1) => {\n    const response = await axios.get(`${baseUrl}/per_campus?page=${page}`)\n    return response.data\n}\n\nexport const getStats =  async () => {\n    const response = await axios.get(`${baseUrl}/stats`)\n    return response.data\n}\n\nexport const getUsers =  async () => {\n    const response = await axios.get(`${baseUrl}/users`)\n    return response.data\n}\n\nexport const getUserData = async (id) => {\n    const response = await axios.get(`${baseUrl}/stats/${id}`)\n    return response.data\n}","import {getStats, getEvaluations, getUsers} from './evaluations'\n\nconst initialState = {\n    users: [],\n    evaluations: [],\n    currentPage: 1,\n    stats: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'INIT':\n            return action.data;\n        case 'CHANGE_PAGE':\n            return {...state, currentPage: action.data.currentPage, evaluations: action.data.evaluations}\n        default:\n            return state;\n    }\n}\n\nexport const initReducer = () => {\n    return async dispatch => {\n        const stats = await getStats();\n        const evaluations = await getEvaluations();\n        const users = await getUsers();\n        dispatch({type: 'INIT', data: {users: users, evaluations: evaluations, stats: stats, currentPage: 1}});\n    }\n}\n\nexport const changePageTo = (page) => {\n    return async dispatch => {\n        const evaluations = await getEvaluations(page);\n        dispatch({type: 'CHANGE_PAGE', data: {currentPage: page, evaluations: evaluations}})\n    }\n}\n\nexport default reducer;","import Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom'\n\nconst dateDifference = (first, second) => {\n    let diff = new Date(second) - new Date(first);\n    return (`${Math.round(diff/60000)} minutes`)\n}\n\nconst EvalTable = ({evaluations}) => {\nif (!evaluations)\n    return null;\nreturn (\n<Table size='small'>\n    <TableHead>\n        <TableRow>\n            <TableCell>Started at</TableCell>\n            <TableCell>Evaluator</TableCell>\n            <TableCell>Evaluation quality</TableCell>\n            <TableCell>Duration</TableCell>\n            <TableCell>Project final grade</TableCell>\n        </TableRow>\n    </TableHead>\n    <TableBody>\n        {evaluations.map(row => {\n            return (\n                <TableRow key={row.id} style={{backgroundColor: `${row.evalGoodness < 0.67 ? 'pink' : 'white'}`}}>\n                    <TableCell>{((new Date(row.begin_at)).toLocaleString(\"en-FI\"))}</TableCell>\n                    <TableCell><Link to={`/user/${row.corrector.id}`}>{row.corrector.login}</Link></TableCell>\n                    <TableCell>{row.evalGoodness * 100 + '%'}</TableCell>\n                    <TableCell>{dateDifference(row.begin_at, row.filled_at)}</TableCell>\n                    <TableCell>{row.final_mark}</TableCell>\n                </TableRow>\n            )}\n        )}\n    </TableBody>\n</Table>\n)}\n\nexport default EvalTable","import React from 'react';\nimport Button from '@material-ui/core/Button'\nimport {useDispatch} from \"react-redux\";\nimport {changePageTo} from '../services/reducer'\nimport EvalTable from \"./EvalTable\";\n\n\nconst Dashboard = ({stats, evaluations, currentPage}) => {\n    const dispatch = useDispatch();\n    if (!evaluations) return null;\n    return (\n        <div>\n            there's a total of {stats.total} evals from the last week, {evaluations.total} from Hive\n            <EvalTable evaluations={evaluations.data} />\n\n            {currentPage > 1\n                ? <Button variant=\"contained\" color=\"primary\" onClick={() => dispatch(changePageTo(currentPage - 1))}>Previous page</Button>\n                : null}\n\n            {currentPage < evaluations.last_page\n                ? <Button variant=\"contained\" color=\"primary\" onClick={() => dispatch(changePageTo(currentPage + 1))}>Next page</Button>\n                : null}\n\n        </div>\n    )\n}\n\n\nexport default Dashboard;","import React from 'react';\nimport {useParams} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport {getUserData} from '../services/evaluations'\nimport EvalTable from \"./EvalTable\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from 'react-router-dom'\nimport Typography from '@material-ui/core/Typography';\n\nconst UserInfo = () => {\n    const [userData, setUserData] = useState({})\n    const fetchUserData = async (id) => {\n        const data = await getUserData(id)\n        setUserData(data);\n    }\n    const {id} = useParams()\n\n    useEffect(() => {\n        fetchUserData(id);\n    }, [id])\n\n    if (!Object.keys(userData).length)\n        return null;\n    return (\n        <>\n        <Typography variant=\"h2\"> {userData.data[0].corrector.login} </Typography>\n        <Typography> Average evaluation \"quality\" {(userData.averageGoodness * 100).toFixed(2)} % </Typography>\n            <EvalTable evaluations={userData.data}/>\n\n            <Button variant=\"contained\" component={Link} to=\"/\" color=\"primary\">\n                Go back\n            </Button>\n        </>\n    )\n}\nexport default UserInfo;","import React from 'react';\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\n\nconst StackedBar = ({data}) => {\n    const sum = Object.keys(data).reduce((sum,key)=>sum+parseFloat(data[key]||0),0);\n\n    const graphData = [\n        {name: 'great', amount: data['1'], percentage: data['1'] ? (data['1'] / sum * 100).toFixed(2)  : 0},\n        {name: 'ok', amount: data['0.67'], percentage: data['0.67'] ? (data['0.67'] / sum * 100).toFixed(2) : 0},\n        {name: 'fair', amount: data['0.33'], percentage: data['0.33'] ? (data['0.33'] / sum * 100).toFixed(2) : 0},\n        {name: 'poor', amount: data['0'], percentage: data['0'] ? (data['0'] / sum * 100).toFixed(2) : 0}]\n        return (\n            <BarChart\n                width={500}\n                height={300}\n                data={graphData}\n                margin={{\n                    top: 20, right: 30, left: 20, bottom: 5,\n                }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"percentage\" stackId=\"a\" fill=\"#8884d8\" />\n            </BarChart>\n        );\n}\n\nexport default StackedBar\n","import React from 'react';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport StackedBar from \"./StackedBar\";\n\nconst StatTable = ({stats}) => {\n    if (!Object.keys(stats).length)\n        return null;\n    return (\n        <>\n            <Table size='small'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Total evaluations</TableCell>\n                        <TableCell>Average evaluation \"quality\"</TableCell>\n                        <TableCell>Short eval sessions</TableCell>\n                        <TableCell>Short evaluator feedback</TableCell>\n                        <TableCell>Low rated evaluations</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow key=\"42\">\n                        <TableCell>{stats.total}</TableCell>\n                        <TableCell>{(stats.averageGoodness.toFixed(2))}</TableCell>\n                        <TableCell>{stats.shortEvaluations}</TableCell>\n                        <TableCell>{stats.shortFeedbackEvaluations}</TableCell>\n                        <TableCell>{stats.lowRatingEvaluations}</TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n            <h3>Eval \"quality\" distribution</h3>\n         <StackedBar data={stats.goodnessDistribution}/>\n        </>\n    )\n}\n\n\nexport default StatTable","import {BrowserRouter as Router, Route, Link, Switch} from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\"\nimport UserInfo from \"./components/UserInfo\"\nimport React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {initReducer, changePageTo} from \"./services/reducer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport StatTable from \"./components/StatTable\";\n\nconst App = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(initReducer())\n    }, [dispatch])\n\n    const {evaluations, stats, currentPage} = useSelector(state => state)\n    return (\n        <Router>\n            <AppBar position=\"static\" color=\"default\">\n                <nav>\n                    <Button variant=\"contained\" color=\"default\" component={Link} to=\"/\"\n                            onClick={() => dispatch(changePageTo(1))}>Home</Button>\n                    <Button variant=\"contained\" color=\"default\" component={Link} to=\"/stats\">Evaluation stats</Button>\n                </nav>\n            </AppBar>\n            <Switch>\n                <Route path='/user/:id'>\n                    <UserInfo/>\n                </Route>\n                <Route path=\"/stats\">\n                    <h1>Evaluation statistics</h1>\n                    {stats && <> <h2>All of 42 </h2> <StatTable stats={stats}/> </>}\n                    {evaluations && <> <h2>Hive </h2> <StatTable stats={evaluations}/> </>}\n                </Route>\n                <Route path=\"/\">\n                    <h1>Recent evaluations at Hive</h1>\n                    {evaluations && <Dashboard stats={stats} evaluations={evaluations} currentPage={currentPage}/>}\n                </Route>\n\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport reducer from './services/reducer'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}